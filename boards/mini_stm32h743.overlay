#include <zephyr/dt-bindings/sensor/qdec_stm32.h>
#include <zephyr/dt-bindings/pinctrl/stm32-pinctrl.h>
#include <zephyr/dt-bindings/pwm/pwm.h>
#include <zephyr/dt-bindings/gpio/gpio.h>

/ {
    aliases {
		spi1 = &spi1;
		spi2 = &spi2;
		encoder1 = &encoder1;
        encoder2 = &encoder2;
    };
};

&spi2 {
	status = "okay";
	pinctrl-0 = <&spi2_sck_pd3
				 &spi2_miso_pc2_c
				 &spi2_mosi_pc3_c>;
	pinctrl-names = "default";
	cs-gpios = <&gpiod 4 GPIO_ACTIVE_LOW>,
               <&gpiod 5 GPIO_ACTIVE_LOW>;
	clock-frequency = <10000000>;
	#address-cells = <1>;
	#size-cells = <0>;
	
	bmi08x_accel: bmi08x@0 {
		compatible = "bosch,bmi08x-accel";
		reg = <0>;
		int-gpios = <&gpioc 0 GPIO_ACTIVE_LOW>;
		spi-max-frequency = <10000000>;
		int1-map-io = <0x01>;
		int2-map-io = <0x00>;
		int1-conf-io = <0x00>;
		int2-conf-io = <0x00>;
		accel-hz = "800";
		accel-fs = <24>;
	};

	bmi08x_gyro: bmi08x@1 {
		compatible = "bosch,bmi08x-gyro";
		reg = <1>;
		int-gpios = <&gpioc 1 GPIO_ACTIVE_LOW>;
		spi-max-frequency = <10000000>;
		int3-4-map-io = <0x01>;
		int3-4-conf-io = <0x00>;
		gyro-hz = "1000_116";
		gyro-fs = <1000>;
	};
};

&timers1 {
    status = "okay";

    pwm1: pwm {
		status = "okay";
		pinctrl-0 = <&tim1_ch1_pe9 &tim1_ch2_pe11>;
		pinctrl-names = "default";
	};

	motor_controller: motor-controller {
        compatible = "toshiba,tb6612fng";
        status = "okay";

        /* PWM配置 */
		pwms = <&pwm1 1 PWM_USEC(20) PWM_POLARITY_NORMAL>, // TIM1_CH1 (PE9)
			   <&pwm1 2 PWM_USEC(20) PWM_POLARITY_NORMAL>; // TIM1_CH2 (PE11)

        /* GPIO配置 */
        ain1-gpios = <&gpioc 4 GPIO_ACTIVE_HIGH>;  // 通道A方向1
        ain2-gpios = <&gpioc 5 GPIO_ACTIVE_HIGH>;  // 通道A方向2
        bin1-gpios = <&gpiob 0 GPIO_ACTIVE_HIGH>;  // 通道B方向1
        bin2-gpios = <&gpiob 1 GPIO_ACTIVE_HIGH>;  // 通道B方向2
        stby-gpios = <&gpiob 2 GPIO_ACTIVE_HIGH>;  // 待机控制

		#pwm-cells = <3>;
    };
};

&timers2 {
    status = "okay";
    encoder1: encoder {
		status = "okay";
		compatible = "st,stm32-encoder";
        pinctrl-0 = <&tim2_ch1_pa15 &tim2_ch2_pb3>;
        pinctrl-names = "default";
        st,encoder-mode = <3>;
        st,input-polarity-inverted;
        st,input-filter-level = <NO_FILTER>;
        st,counts-per-revolution = <15000>;
    };
};

&timers3 {
    status = "okay";
    encoder2: encoder {
		status = "okay";
		compatible = "st,stm32-encoder";
        pinctrl-0 = <&tim3_ch1_pc6 &tim3_ch2_pc7>;
        pinctrl-names = "default";
        st,encoder-mode = <3>;
        st,input-polarity-inverted;
        st,input-filter-level = <NO_FILTER>;
        st,counts-per-revolution = <15000>;
    };
};